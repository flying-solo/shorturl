import Head from "next/head";
import { useState } from "react";
import axios from "axios";
import { urlValidate } from "../middleware/validate";

export default function Home() {
  const [url, setUrl] = useState("");
  const [urlError, setUrlError] = useState("");
  const [shortUrl, setShortUrl] = useState("short URL will appear here");
  const [fetching, setFetching] = useState(false);

  const handleSubmit = async () => {
    await urlValidate
      .validate({ url })
      .then((res) => {
        setFetching(true);
        axios
          .post("/api/shorten", { url })
          .then((result) => {
            setShortUrl(result.data);
            setFetching(false);
          })
          .catch((err) => {
            console.log("Error -> index.tsx -> post", err);
            setFetching(false);
          });
      })
      .catch((err) => {
        setUrlError(err.errors[0]);
        setFetching(false);
      });
  };

  return (
    <>
      <Head>
        <title>URL Shortner</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="h-screen flex flex-col justify-end items-center backgroundGradient">
        <div className="h-[90%] w-[80%] bg-[#ffffff06] rounded-t-3xl backdrop-blur-[2rem] flex flex-col items-center justify-evenly">
          <div className="font-bold text-[2rem] mt-5 text-transparent text-8xl bg-clip-text bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500">
            Shorten Your Url
          </div>
          <div className="flex flex-col items-center gap-4">
            <div className="text-red-400">{urlError}</div>
            <div className="flex gap-4">
              <input
                type="text"
                value={url}
                placeholder="Enter your Link"
                className="text-white outline-none px-5 py-2 bg-transparent border-b-2 border-b-gray-300 text-md shadow-sm placeholder-[#c4c4c4] w-[50vw]"
                onChange={(e) => {
                  setUrl(e.target.value);
                  setUrlError("");
                }}
              />
            </div>
            <button
              disabled={urlError !== ""}
              className={`${
                urlError !== ""
                  ? "bg-red-500 hover:cursor-not-allowed opacity-70"
                  : "bg-violet-800"
              } text-white px-4 py-2 font-semibold`}
              onClick={handleSubmit}
            >
              Shorten
            </button>
          </div>
          <div className="bg-transparent px-4 py-2 text-pink-600 font-medium hover:text-purple-500 hover:cursor-pointer border-2 border-gray-600">
            <a href={shortUrl} target="_blank" rel="noreferrer">
              {fetching ? "The bits are breeding" : shortUrl}
            </a>
          </div>
        </div>
      </main>
    </>
  );
}
